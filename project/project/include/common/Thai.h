/***********************************************************************
** Copyright (C) Tongwei Video Technology Co.,Ltd. All rights reserved.
** Author       : 
** Date         : 2010-12-31
** Name         : Thai.h
** Version      : 1.0
** Description  : 
** Modify Record:
1:
***********************************************************************/
#ifndef _THAI_H_
#define _THAI_H_

enum ENUM_THAI_CHAR_TYPE
{
	THAI_CTRL = 0,	//THAI_LV_NONE
	
	THAI_NON,		//THAI_LV_BASE
	THAI_CONS,
	THAI_LV,
	THAI_FV1,
	THAI_FV2,
	THAI_FV3,
	
	THAI_BV1,		//THAI_LV_BELOW
	THAI_BV2,
	THAI_BD,
	
	THAI_TONE,		//THAI_LV_TOP
	THAI_AD1,
	THAI_AD2,

	THAI_AD3,		//THAI_LV_ABOVE
	THAI_AV1,
	THAI_AV2,
	THAI_AV3
};

enum ENUM_THAI_LEVEL_DISP
{
	THAI_LV_NONE = 0,
	THAI_LV_TOP,
	THAI_LV_ABOVE,
	THAI_LV_BASE,
	THAI_LV_BELOW
};

enum ENUM_THAI_RULE_DISP
{
	THAI_RULE_X = 0,	//不显示
	THAI_RULE_C,		//和前一个code显示在一个区域
	THAI_RULE_N			//在下一个区域显示
};

const char THAI_CHAR_TYPE[6 * 16] = {
/*		x0    x1    x2    x3    x4    x5    x6    x7    x8    x9    xA    xB    xC    xD    xE    xF   */
/*Ax*/	0x00, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
/*Bx*/	0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02,
/*Cx*/	0x02, 0x02, 0x02, 0x02, 0x06, 0x02, 0x06, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x02, 0x01,
/*Dx*/	0x04, 0x0F, 0x04, 0x04, 0x0E, 0x10, 0x0F, 0x10, 0x07, 0x08, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01,
/*Ex*/  0x03, 0x03, 0x03, 0x03, 0x03, 0x05, 0x01, 0x0C, 0x0A, 0x0A, 0x0A, 0x0A, 0x0B, 0x0B, 0x0D, 0x01,
/*Fx*/  0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00
};

const char THAI_RULE_DISP[17][17] = {
/*         CTRL  NON   CONS  LV    FV1   FV2   FV3   BV1   BV2   BD    TONE  AD1   AD2   AD3   AV1   AV2   AV3 */
/*CTRL*/   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*NON */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*CONS*/   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x1,  0x1,  0x1,  0x1,  0x1,  0x1,  0x1,  0x1,  0x1,  0x1,
/*LV  */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*FV1 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*FV2 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*FV3 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*BV1 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x1,  0x1,  0x2,  0x2,  0x2,  0x2,  0x2,
/*BV2 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x1,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*BD  */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*TONE*/   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*AD1 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*AD2 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*AD3 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*AV1 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x1,  0x1,  0x2,  0x2,  0x2,  0x2,  0x2,
/*AV2 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x1,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,
/*AV3 */   0x0,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x2,  0x1,  0x2,  0x1,  0x2,  0x2,  0x2,  0x2
};

inline int ThaiCharType(unsigned long ucs_code)
{
	if((ucs_code >= 0x0E00) && ucs_code <= 0x0E5F)
	{
		unsigned long index = (ucs_code & 0xFF);
		return static_cast<int>(THAI_CHAR_TYPE[index]);
	}
	else
	{
		return -1;
	}
}

inline int ThaiCharLevel(unsigned long ucs_code)
{
	int type = ThaiCharType(ucs_code);
	if(type >= 0)
	{
		if(type >= THAI_AD3)
		{
			return THAI_LV_ABOVE;
		}
		else if(type >= THAI_TONE)
		{
			return THAI_LV_TOP;
		}
		else if(type >= THAI_BV1)
		{
			return THAI_LV_BELOW;
		}
		else if(type >= THAI_NON)
		{
			return THAI_LV_BASE;
		}
		else
		{
			return THAI_LV_NONE;
		}
	}
	else
	{
		return -1;
	}
}

inline int ThaiCharRule(unsigned long ucs_cur_code, unsigned long ucs_pre_code)
{
	int cur_type = ThaiCharType(ucs_cur_code);
	int pre_type = ThaiCharType(ucs_pre_code);

	if((cur_type < 0) || (pre_type < 0))
	{
		return THAI_RULE_N;
	}

	return static_cast<int>(THAI_RULE_DISP[pre_type][cur_type]);
}

//////////////////////////////////////////////////////////////////////////

#ifdef _CREATE_FONT
unsigned long THAI_SAMPLING[3][16][3] = {
/*		x0                  x1                  x2                  x3                  x4                  x5                  x6                  x7                  x8                  x9                  xA                  xB                  xC                  xD                  xE                  xF   */
/*3x*/	0xE30,0x000,0x000,  0xE08,0xE31,0x000,  0xE32,0x000,0x000,  0xE01,0xE33,0x000,  0xE27,0xE34,0x000,  0xE27,0xE35,0x000,  0xE17,0xE36,0x000,  0xE15,0xE37,0x000,  0xE22,0xE38,0x000,  0xE21,0xE39,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0xE3F,0x000,0x000,
/*4x*/  0xE40,0x000,0x000,  0xE41,0x000,0x000,  0xE42,0x000,0x000,  0xE43,0x000,0x000,  0xE44,0x000,0x000,  0xE45,0x000,0x000,  0xE46,0x000,0x000,  0xE25,0xE47,0x000,  0xE25,0xE48,0x000,  0xE02,0xE49,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x04F,0x000,0x000,
/*5x*/  0xE50,0x000,0x000,  0xE51,0x000,0x000,  0xE52,0x000,0x000,  0xE53,0x000,0x000,  0xE54,0x000,0x000,  0xE55,0x000,0x000,  0xE56,0x000,0x000,  0xE57,0x000,0x000,  0xE58,0x000,0x000,  0xE59,0x000,0x000,  0xE5A,0x000,0x000,  0xE5B,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000,  0x000,0x000,0x000
};

#endif

#endif

//end
